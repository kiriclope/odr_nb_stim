#+STARTUP: fold
#+TITLE: Cholinergic neuromodulation of prefrontal attractor dynamics controls performance in spatial WM
#+PROPERTY: header-args:ipython :results both :exports both :async yes :session dual_data :kernel dual_data

* Notebook Settings

#+begin_src ipython
  %load_ext autoreload
  %autoreload 2
  %reload_ext autoreload

  %run ~/models/NeuroTorch/notebooks/setup.py
  %matplotlib inline
  %config InlineBackend.figure_format = 'png'

  REPO_ROOT = "/home/leon/models/NeuroTorch"
  pal = sns.color_palette("tab10")
#+end_src

#+RESULTS:
: The autoreload extension is already loaded. To reload it, use:
:   %reload_ext autoreload
: Python exe
: /home/leon/mambaforge/envs/dual_data/bin/python

* Imports

#+begin_src ipython
  import sys
  sys.path.insert(0, '../')

  import pandas as pd
  from time import perf_counter 
  from scipy.stats import circmean

  from src.utils import *
#+end_src

#+RESULTS:

#+begin_src ipython
  df = raw_data_to_df(THRESH=30)
#+end_src

#+begin_src ipython
a, b = plot_dtheta(df, "first", "all")
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/012f606524d7ff48d7bab300017b5a27a902a447.png]]

#+begin_src ipython
      import scipy.stats as stats
      mu_, sigma_ = stats.norm.fit(a)
      mu_, sigma_on = stats.norm.fit(b)
      print(sigma_, sigma_on)
      print(sigma_**2, sigma_on**2)

      stat, p_value = stats.levene(a, b)
      print(stat, p_value)
#+end_src

#+RESULTS:
: 6.086302990994031 5.002583976354366
: 37.04308409818288 25.02584644047746
: 44.75237088744802 2.678809460438713e-11

#+begin_src ipython
  from src.stats.bootstrap import my_boots_ci  
#+end_src

#+RESULTS:

#+begin_src ipython
  def get_std(x):
      _, sigma = stats.norm.fit(x)
      return sigma  
#+end_src

#+RESULTS:

#+begin_src ipython
  ci_off = my_boots_ci(a, get_std, n_samples=10000, method="BCa", alpha=0.05)
  print(ci_off)
  print((ci_off[1] - ci_off[0])/2)
  
  ci_on = my_boots_ci(b, get_std, n_samples=10000, method="BCa", alpha=0.05)
  print((ci_on[1] - ci_on[0])/2)
#+end_src

#+RESULTS:
: [5.843350506736987, 6.377256851073366]
: 0.2669531721681895
: 0.2279140774084767

#+begin_src ipython
  model = glm_NB_task_monkey(df, error="dtheta2", THRESH=30)
#+end_src

#+RESULTS:
#+begin_example
  dtheta2 ~ NB * task * monkey
                   Generalized Linear Model Regression Results                  
  ==============================================================================
  Dep. Variable:                dtheta2   No. Observations:                 4289
  Model:                            GLM   Df Residuals:                     4281
  Model Family:                Gaussian   Df Model:                            7
  Link Function:               Identity   Scale:                          4191.7
  Method:                          IRLS   Log-Likelihood:                -23969.
  Date:                Mon, 15 Jan 2024   Deviance:                   1.7945e+07
  Time:                        17:20:29   Pearson chi2:                 1.79e+07
  No. Iterations:                     3   Pseudo R-squ. (CS):            0.05377
  Covariance Type:            nonrobust                                         
  ==================================================================================
                       coef    std err          z      P>|z|      [0.025      0.975]
  ----------------------------------------------------------------------------------
  Intercept         30.9287      2.686     11.515      0.000      25.664      36.193
  NB               -12.1898      3.473     -3.510      0.000     -18.996      -5.383
  task              18.8749      3.947      4.782      0.000      11.138      26.612
  NB:task          -12.4211      5.064     -2.453      0.014     -22.347      -2.495
  monkey            12.9414      3.824      3.385      0.001       5.447      20.436
  NB:monkey         11.7545      5.795      2.028      0.043       0.397      23.112
  task:monkey        4.1973      5.693      0.737      0.461      -6.960      15.355
  NB:task:monkey    -2.1283      8.645     -0.246      0.806     -19.072      14.815
  ==================================================================================
#+end_example

#+begin_src ipython
  model.pvalues  
#+end_src

#+RESULTS:
: Intercept         1.111958e-30
: NB                4.480159e-04
: task              1.738159e-06
: NB:task           1.417999e-02
: monkey            7.129972e-04
: NB:monkey         4.251354e-02
: task:monkey       4.609310e-01
: NB:task:monkey    8.055344e-01
: dtype: float64


#+begin_src ipython
  glm_NB_distance_monkey(df, 0, error="dtheta2", THRESH=30)
#+end_src

#+begin_src ipython

#+end_src
